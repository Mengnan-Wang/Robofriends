{"version":3,"sources":["Card.js","Cardlist.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","Cardlist","robots","map","user","i","src_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","src_SearchBox","src_Scroll","src_Cardlist","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oMAeeA,EAbF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,MACrB,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BT,EAA1B,cACrBG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,MCcLQ,EApBE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OACf,OACIR,EAAAC,EAAAC,cAAA,WAEQM,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIX,EAAAC,EAAAC,cAACU,EAAD,CACAC,IAAKF,EACLd,GAAMW,EAAOG,GAAGd,GAChBC,KAAQU,EAAOG,GAAGb,KAClBC,MAASS,EAAOG,GAAGZ,YCI5Be,EAfG,SAAAlB,GAAiCA,EAA/BmB,YAA+B,IAAlBC,EAAkBpB,EAAlBoB,aAC7B,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SACAC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCEPI,EATA,SAACC,GACZ,OACIrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCwCJC,cAvCX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAgBJI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAAEtB,YAAaqB,EAAME,OAAOC,SAhB1CX,EAAKY,MAAQ,CACThC,OAAQ,GACRO,YAAa,IAJRa,mFAQM,IAAAa,EAAAV,KAEfW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAE7B,OAAOsC,uCASlC,IAAAC,EAAAhB,KACEiB,EAAiBjB,KAAKS,MAAMhC,OAAOyC,OAAO,SAAAC,GAC5C,OAAOA,EAAMpD,KAAKqD,cAAcC,SAASL,EAAKP,MAAMzB,YAAYoC,iBAEpE,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+CAAd,eACAH,EAAAC,EAAAC,cAACmD,EAAD,CAAWrC,aAAce,KAAKI,iBAC9BnC,EAAAC,EAAAC,cAACoD,EAAD,KACItD,EAAAC,EAAAC,cAACqD,EAAD,CAAU/C,OAAQwC,aA/BpBQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlB,KAAAiB,EAAAE,KAAA,UAAqBnB,KAAK,SAAA/C,GAAiD,IAA9CmE,EAA8CnE,EAA9CmE,OAAQC,EAAsCpE,EAAtCoE,OAAQC,EAA8BrE,EAA9BqE,OAAQC,EAAsBtE,EAAtBsE,OAAQC,EAAcvE,EAAduE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCEDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxE,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,WAAP,KACEzE,EAAAC,EAAAC,cAACwE,EAAD,QAQJjB","file":"static/js/main.5ffdbbf2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        // return only can contain one element\r\n        <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200*200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({robots}) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i}\r\n                        id = {robots[i].id}\r\n                        name = {robots[i].name}\r\n                        email = {robots[i].email}\r\n                        />\r\n\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cardlist","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2 ma2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type='search' \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}/>\r\n            \r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll","import React, { Component }from \"react\"\r\nimport Cardlist from \"./Cardlist\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport Scroll from \"./Scroll\";\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // apply api\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots:users }))\r\n\r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n        \r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        return(\r\n            <div className=\"tc\">\r\n                <h1 className=\"pa2 ma2 f-subheadline lh-title light-yellow\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <Cardlist robots={filteredRobots}/>\r\n                </Scroll>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}